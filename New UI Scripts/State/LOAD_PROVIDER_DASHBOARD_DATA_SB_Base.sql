CREATE OR REPLACE PROCEDURE CONFLICTREPORT_SANDBOX.PUBLIC.LOAD_PROVIDER_DASHBOARD_DATA()
RETURNS VARCHAR
LANGUAGE JAVASCRIPT
EXECUTE AS CALLER
AS '
	
	var SQL3 = `TRUNCATE TABLE CONFLICTREPORT_SANDBOX.PUBLIC.PROVIDER_DASHBOARD_CON_TYP`;
	var SQL4 = `INSERT INTO CONFLICTREPORT_SANDBOX.PUBLIC.PROVIDER_DASHBOARD_CON_TYP (PROVIDERID, OFFICEID, CRDATEUNIQUE, EX_ST_MATCH_TO, EX_ST_MATCH_SP, EX_ST_MATCH_OP, EX_ST_MATCH_FP, EX_VT_MATCH_TO, EX_VT_MATCH_SP, EX_VT_MATCH_OP, EX_VT_MATCH_FP, EX_ST_VT_MATCH_TO, EX_ST_VT_MATCH_SP, EX_ST_VT_MATCH_OP, EX_ST_VT_MATCH_FP, ST_OVR_TO, ST_OVR_SP, ST_OVR_OP, ST_OVR_FP, VT_OVR_TO, VT_OVR_SP, VT_OVR_OP, VT_OVR_FP, ST_VT_OVR_TO, ST_VT_OVR_SP, ST_VT_OVR_OP, ST_VT_OVR_FP, TD_TO, TD_SP, TD_OP, TD_FP, IN_TO, IN_SP, IN_OP, IN_FP, PT_TO, PT_SP, PT_OP, PT_FP)
	SELECT
		CVM."ProviderID" AS PROVIDERID,
		CVM."OfficeID" AS OFFICEID,
		TO_CHAR(CVM."CRDATEUNIQUE", ''YYYY-MM-DD'') AS CRDATEUNIQUE,
		COUNT(DISTINCT CASE WHEN CVM."SameSchTimeFlag" = ''Y'' THEN CVM.CONFLICTID END) AS EX_ST_MATCH_TO,
		SUM( CASE WHEN CVM."SameSchTimeFlag" = ''Y'' THEN CVMCH."ShiftPrice" ELSE 0 END ) AS EX_ST_MATCH_SP,
		SUM( CASE WHEN CVM."SameSchTimeFlag" = ''Y'' THEN CVMCH."OverlapPrice" ELSE 0 END ) AS EX_ST_MATCH_OP,
		SUM( CASE WHEN CVM."SameSchTimeFlag" = ''Y'' AND V2."StatusFlag" IN (''R'', ''D'') THEN CVMCH."OverlapPrice" ELSE 0 END ) AS EX_ST_MATCH_FP,
		COUNT(DISTINCT CASE WHEN CVM."SameVisitTimeFlag" = ''Y'' THEN CVM.CONFLICTID END) AS EX_VT_MATCH_TO,
		SUM( CASE WHEN CVM."SameVisitTimeFlag" = ''Y'' THEN CVMCH."ShiftPrice" ELSE 0 END ) AS EX_VT_MATCH_SP,
		SUM( CASE WHEN CVM."SameVisitTimeFlag" = ''Y'' THEN CVMCH."OverlapPrice" ELSE 0 END ) AS EX_VT_MATCH_OP,
		SUM( CASE WHEN CVM."SameVisitTimeFlag" = ''Y'' AND V2."StatusFlag" IN (''R'', ''D'') THEN CVMCH."OverlapPrice" ELSE 0 END ) AS EX_VT_MATCH_FP,
		COUNT(DISTINCT CASE WHEN CVM."SchAndVisitTimeSameFlag" = ''Y'' THEN CVM.CONFLICTID END) AS EX_ST_VT_MATCH_TO,
		SUM( CASE WHEN CVM."SchAndVisitTimeSameFlag" = ''Y'' THEN CVMCH."ShiftPrice" ELSE 0 END ) AS EX_ST_VT_MATCH_SP,
		SUM( CASE WHEN CVM."SchAndVisitTimeSameFlag" = ''Y'' THEN CVMCH."OverlapPrice" ELSE 0 END ) AS EX_ST_VT_MATCH_OP,
		SUM( CASE WHEN CVM."SchAndVisitTimeSameFlag" = ''Y'' AND V2."StatusFlag" IN (''R'', ''D'')THEN CVMCH."OverlapPrice" ELSE 0 END ) AS EX_ST_VT_MATCH_FP,
		COUNT(DISTINCT CASE WHEN CVM."SchOverAnotherSchTimeFlag" = ''Y'' THEN CVM.CONFLICTID END) AS ST_OVR_TO,
		SUM( CASE WHEN CVM."SchOverAnotherSchTimeFlag" = ''Y'' THEN CVMCH."ShiftPrice" ELSE 0 END ) AS ST_OVR_SP,
		SUM( CASE WHEN CVM."SchOverAnotherSchTimeFlag" = ''Y'' THEN CVMCH."OverlapPrice" ELSE 0 END ) AS ST_OVR_OP,
		SUM( CASE WHEN CVM."SchOverAnotherSchTimeFlag" = ''Y'' AND V2."StatusFlag" IN (''R'', ''D'') THEN CVMCH."OverlapPrice" ELSE 0 END ) AS ST_OVR_FP,
		COUNT(DISTINCT CASE WHEN CVM."VisitTimeOverAnotherVisitTimeFlag" = ''Y'' THEN CVM.CONFLICTID END) AS VT_OVR_TO,
		SUM( CASE WHEN CVM."VisitTimeOverAnotherVisitTimeFlag" = ''Y'' THEN CVMCH."ShiftPrice" ELSE 0 END ) AS VT_OVR_SP,
		SUM( CASE WHEN CVM."VisitTimeOverAnotherVisitTimeFlag" = ''Y'' THEN CVMCH."OverlapPrice" ELSE 0 END ) AS VT_OVR_OP,
		SUM( CASE WHEN CVM."VisitTimeOverAnotherVisitTimeFlag" = ''Y'' AND V2."StatusFlag" IN (''R'', ''D'') THEN CVMCH."OverlapPrice" ELSE 0 END ) AS VT_OVR_FP,
		COUNT(DISTINCT CASE WHEN CVM."SchTimeOverVisitTimeFlag" = ''Y'' THEN CVM.CONFLICTID END) AS ST_VT_OVR_TO,
		SUM( CASE WHEN CVM."SchTimeOverVisitTimeFlag" = ''Y'' THEN CVMCH."ShiftPrice" ELSE 0 END ) AS ST_VT_OVR_SP,
		SUM( CASE WHEN CVM."SchTimeOverVisitTimeFlag" = ''Y'' THEN CVMCH."OverlapPrice" ELSE 0 END ) AS ST_VT_OVR_OP,
		SUM( CASE WHEN CVM."SchTimeOverVisitTimeFlag" = ''Y'' AND V2."StatusFlag" IN (''R'', ''D'') THEN CVMCH."OverlapPrice" ELSE 0 END ) AS ST_VT_OVR_FP,
		COUNT(DISTINCT CASE WHEN CVM."DistanceFlag" = ''Y'' THEN CVM.CONFLICTID END) AS TD_TO,
		SUM( CASE WHEN CVM."DistanceFlag" = ''Y'' THEN CVMCH."ShiftPrice" ELSE 0 END ) AS TD_SP,
		SUM( CASE WHEN CVM."DistanceFlag" = ''Y'' THEN CVMCH."OverlapPrice" ELSE 0 END ) AS TD_OP,
		SUM( CASE WHEN CVM."DistanceFlag" = ''Y'' AND V2."StatusFlag" IN (''R'', ''D'') THEN CVMCH."OverlapPrice" ELSE 0 END ) AS TD_FP,
		COUNT(DISTINCT CASE WHEN CVM."InServiceFlag" = ''Y'' THEN CVM.CONFLICTID END) AS IN_TO,
		SUM( CASE WHEN CVM."InServiceFlag" = ''Y'' THEN CVMCH."ShiftPrice" ELSE 0 END ) AS IN_SP,
		SUM( CASE WHEN CVM."InServiceFlag" = ''Y'' THEN CVMCH."OverlapPrice" ELSE 0 END ) AS IN_OP,
		SUM( CASE WHEN CVM."InServiceFlag" = ''Y'' AND V2."StatusFlag" IN (''R'', ''D'') THEN CVMCH."OverlapPrice" ELSE 0 END ) AS IN_FP,
		COUNT(DISTINCT CASE WHEN CVM."PTOFlag" = ''Y'' THEN CVM.CONFLICTID END) AS PT_TO,
		SUM( CASE WHEN CVM."PTOFlag" = ''Y'' THEN CVMCH."ShiftPrice" ELSE 0 END ) AS PT_SP,
		SUM( CASE WHEN CVM."PTOFlag" = ''Y'' THEN CVMCH."OverlapPrice" ELSE 0 END ) AS PT_OP,
		SUM( CASE WHEN CVM."PTOFlag" = ''Y'' AND V2."StatusFlag" IN (''R'', ''D'') THEN CVMCH."OverlapPrice" ELSE 0 END ) AS PT_FP
	FROM
		CONFLICTREPORT_SANDBOX.PUBLIC.CONFLICTVISITMAPS AS CVM
	INNER JOIN CONFLICTREPORT_SANDBOX.PUBLIC.CONFLICTS AS V2 ON
		V2."CONFLICTID" = CVM."CONFLICTID"
	LEFT JOIN (
		SELECT
			CVM1.ID,
			CASE
			    WHEN CVM1."BilledRateMinute" > 0 AND CVM1."BILLABLEMINUTESFULLSHIFT" IS NOT NULL THEN CVM1."BILLABLEMINUTESFULLSHIFT" * CVM1."BilledRateMinute"
				WHEN CVM1."BilledRateMinute" > 0 THEN TIMESTAMPDIFF(MINUTE, CVM1."ShVTSTTime", CVM1."ShVTENTime") * CVM1."BilledRateMinute"
				ELSE 0
			END AS "ShiftPrice",
			ROW_NUMBER() OVER (PARTITION BY CVM1."CONFLICTID"
		ORDER BY
			CASE
				WHEN CVM1."CShVTSTTime" >= CVM1."ShVTSTTime"
				AND CVM1."CShVTSTTime" <= CVM1."ShVTENTime"
				AND CVM1."CShVTENTime" > CVM1."ShVTENTime" THEN TIMESTAMPDIFF(MINUTE, CVM1."CShVTSTTime", CVM1."ShVTENTime")
				WHEN CVM1."ShVTSTTime" >= CVM1."CShVTSTTime"
					AND CVM1."ShVTSTTime" <= CVM1."CShVTENTime"
					AND CVM1."ShVTENTime" > CVM1."CShVTENTime" THEN TIMESTAMPDIFF(MINUTE, CVM1."ShVTSTTime", CVM1."CShVTENTime")
					WHEN CVM1."CShVTSTTime" >= CVM1."ShVTSTTime"
						AND CVM1."CShVTENTime" <= CVM1."ShVTENTime" THEN TIMESTAMPDIFF(MINUTE, CVM1."CShVTSTTime", CVM1."CShVTENTime")
						WHEN CVM1."ShVTSTTime" >= CVM1."CShVTSTTime"
							AND CVM1."ShVTENTime" <= CVM1."CShVTENTime" THEN TIMESTAMPDIFF(MINUTE, CVM1."ShVTSTTime", CVM1."ShVTENTime")
							WHEN CVM1."CShVTSTTime" < CVM1."ShVTSTTime"
								AND CVM1."CShVTENTime" > CVM1."ShVTENTime" THEN TIMESTAMPDIFF(MINUTE, CVM1."ShVTSTTime", CVM1."ShVTENTime")
								WHEN CVM1."ShVTSTTime" < CVM1."CShVTSTTime"
									AND CVM1."ShVTENTime" > CVM1."CShVTENTime" THEN TIMESTAMPDIFF(MINUTE, CVM1."CShVTSTTime", CVM1."CShVTENTime")
									ELSE 0
								END DESC) AS RN,
			CASE
			    WHEN CVM1."BilledRateMinute" > 0 AND CVM1."BILLABLEMINUTESOVERLAP" IS NOT NULL THEN CVM1."BILLABLEMINUTESOVERLAP" * CVM1."BilledRateMinute"
				WHEN CVM1."BilledRateMinute" > 0
					AND CVM1."CShVTSTTime" >= CVM1."ShVTSTTime"
					AND CVM1."CShVTSTTime" <= CVM1."ShVTENTime"
					AND CVM1."CShVTENTime" > CVM1."ShVTENTime" THEN TIMESTAMPDIFF(MINUTE, CVM1."CShVTSTTime", CVM1."ShVTENTime") * CVM1."BilledRateMinute"
					WHEN CVM1."BilledRateMinute" > 0
						AND CVM1."ShVTSTTime" >= CVM1."CShVTSTTime"
						AND CVM1."ShVTSTTime" <= CVM1."CShVTENTime"
						AND CVM1."ShVTENTime" > CVM1."CShVTENTime" THEN TIMESTAMPDIFF(MINUTE, CVM1."ShVTSTTime", CVM1."CShVTENTime") * CVM1."BilledRateMinute"
						WHEN CVM1."BilledRateMinute" > 0
							AND CVM1."CShVTSTTime" >= CVM1."ShVTSTTime"
							AND CVM1."CShVTENTime" <= CVM1."ShVTENTime" THEN TIMESTAMPDIFF(MINUTE, CVM1."CShVTSTTime", CVM1."CShVTENTime") * CVM1."BilledRateMinute"
							WHEN CVM1."BilledRateMinute" > 0
								AND CVM1."ShVTSTTime" >= CVM1."CShVTSTTime"
								AND CVM1."ShVTENTime" <= CVM1."CShVTENTime" THEN TIMESTAMPDIFF(MINUTE, CVM1."ShVTSTTime", CVM1."ShVTENTime") * CVM1."BilledRateMinute"
								WHEN CVM1."BilledRateMinute" > 0
									AND CVM1."CShVTSTTime" < CVM1."ShVTSTTime"
									AND CVM1."CShVTENTime" > CVM1."ShVTENTime" THEN TIMESTAMPDIFF(MINUTE, CVM1."ShVTSTTime", CVM1."ShVTENTime") * CVM1."BilledRateMinute"
									WHEN CVM1."BilledRateMinute" > 0
										AND CVM1."ShVTSTTime" < CVM1."CShVTSTTime"
										AND CVM1."ShVTENTime" > CVM1."CShVTENTime" THEN TIMESTAMPDIFF(MINUTE, CVM1."CShVTSTTime", CVM1."CShVTENTime") * CVM1."BilledRateMinute"
										ELSE 0
									END AS "OverlapPrice"
		FROM
			CONFLICTREPORT_SANDBOX.PUBLIC.CONFLICTVISITMAPS AS CVM1
		 ) AS CVMCH ON CVMCH.ID = CVM.ID AND CVMCH.RN = 1
		GROUP BY TO_CHAR(CVM."CRDATEUNIQUE", ''YYYY-MM-DD''), CVM."ProviderID", CVM."OfficeID"
	`;

  try {
      
      snowflake.execute({ sqlText: SQL3 });
		snowflake.execute({ sqlText: SQL4 });
      
      return "Provider Dashboard Data Loaded Successfully.";
  } catch (err) {
      throw "ERROR: " + err.message;
  }
';